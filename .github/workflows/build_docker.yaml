name: actions

on: [push, pull_request]

env:
  REGISTRY: 'crpi-mefcp83bif5rwsdn.cn-chengdu.personal.cr.aliyuncs.com/lm379/alist-strm' # 阿里云镜像地址
  RELEASE_PLATFORMS: 'linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/loong64,linux/arm/v7,linux/arm/v6'    # 目标平台列表
  IMAGE_PUSH: true                                             # 总是启用推送

jobs:
  build_docker:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 初始化多架构构建环境
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: |
            image=moby/buildkit:master

      # 创建并激活构建器
      - name: Create builder instance
        run: |
          docker buildx create --name multiarch --use
          docker buildx inspect --bootstrap

      # 阿里云容器镜像登录
      - name: Login to Aliyun ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: crpi-mefcp83bif5rwsdn.cn-chengdu.personal.cr.aliyuncs.com
          region-id: cn-chengdu
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # 生成动态镜像标签
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}
          tags: |
            type=raw,value=latest

      # 执行多平台构建推送
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ env.IMAGE_PUSH }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: ${{ env.RELEASE_PLATFORMS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
